{"name": "test_add_object[data1]", "status": "broken", "statusDetails": {"message": "KeyError: 'Hard disk size'", "trace": "post_create_object = <endpoints.create_object.CreateObject object at 0x0000028B4DF3AE40>\ndata = {'data': {'cpu_model': 'Intel Core', 'hard_disk_size': '20 GB', 'price': 50, 'year': 2020}, 'name': 'HP 2024 Kate'}\n\n    @pytest.mark.parametrize('data', TEST_DATA)\n    def test_add_object(post_create_object, data):\n    \n        post_create_object.new_object(payload=data)\n        # with allure.step('Check status code is 200'):\n        #     assert response.status_code == 200\n        post_create_object.check_status_code_is_correct(status_code=200)\n        post_create_object.check_name_is_correct(data['name'])\n        post_create_object.check_year_is_correct(data['data']['year'])\n        post_create_object.check_price_is_correct(data['data']['price'])\n        post_create_object.check_cpu_model_is_correct(data['data']['cpu_model'])\n>       post_create_object.check_hard_disk_size_is_correct(data['data']['hard_disk_size'])\n\ntests\\test_1.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <endpoints.create_object.CreateObject object at 0x0000028B4DF3AE40>, hard_disk_size = '20 GB'\n\n    @allure.step('Check Hard disk size')\n    def check_hard_disk_size_is_correct(self, hard_disk_size):\n>       assert self.json['data']['Hard disk size'] == hard_disk_size\nE       KeyError: 'Hard disk size'\n\nendpoints\\create_object.py:43: KeyError"}, "steps": [{"name": "create new object", "status": "passed", "parameters": [{"name": "payload", "value": "{'name': 'HP 2024 Kate', 'data': {'year': 2020, 'price': 50, 'cpu_model': 'Intel Core', 'hard_disk_size': '20 GB'}}"}, {"name": "headers", "value": "None"}], "start": 1720780623169, "stop": 1720780623669}, {"name": "Check status code", "status": "passed", "parameters": [{"name": "status_code", "value": "200"}], "start": 1720780623670, "stop": 1720780623670}, {"name": "Check name", "status": "passed", "parameters": [{"name": "name", "value": "'HP 2024 Kate'"}], "start": 1720780623670, "stop": 1720780623670}, {"name": "Check year", "status": "passed", "parameters": [{"name": "year", "value": "2020"}], "start": 1720780623671, "stop": 1720780623671}, {"name": "Check price", "status": "passed", "parameters": [{"name": "price", "value": "50"}], "start": 1720780623671, "stop": 1720780623671}, {"name": "Check CPU model", "status": "passed", "parameters": [{"name": "cpu_model", "value": "'Intel Core'"}], "start": 1720780623671, "stop": 1720780623671}, {"name": "Check Hard disk size", "status": "broken", "statusDetails": {"message": "KeyError: 'Hard disk size'\n", "trace": "  File \"C:\\Kate\\lessons_AQA\\project\\Katherina_K\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Kate\\lessons_AQA\\project\\Katherina_K\\test_api_kkaplina\\endpoints\\create_object.py\", line 43, in check_hard_disk_size_is_correct\n    assert self.json['data']['Hard disk size'] == hard_disk_size\n           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^\n"}, "parameters": [{"name": "hard_disk_size", "value": "'20 GB'"}], "start": 1720780623672, "stop": 1720780623672}], "parameters": [{"name": "data", "value": "{'name': 'HP 2024 Kate', 'data': {'year': 2020, 'price': 50, 'cpu_model': 'Intel Core', 'hard_disk_size': '20 GB'}}"}], "start": 1720780623169, "stop": 1720780623675, "uuid": "e8798e82-62d4-4153-9932-ce91bb51d64c", "historyId": "ad2c3a8d05b9ad16e9e5e11324e1b8b8", "testCaseId": "102ffaf2f9df4e09a27acf1f5939faca", "fullName": "tests.test_1#test_add_object", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_1"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "12632-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_1"}]}